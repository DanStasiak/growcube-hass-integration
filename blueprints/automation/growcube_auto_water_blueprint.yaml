blueprint:
  name: GrowCube Auto Watering (Advanced)
  description: >
    Automatically waters a GrowCube plant when moisture is below a set low threshold,
    continues watering until the high threshold is reached or water runs out.

    Version: 1.1.5
    - Removed all templated service calls
    - Uses choose blocks to select notify services
    - Added debug persistent notifications

  domain: automation
  input:
    plant_name:
      name: Plant Name
      selector:
        text:
    moisture_sensor:
      name: Moisture Sensor
      selector:
        entity:
          domain: sensor
    water_button:
      name: Water Button
      selector:
        entity:
          domain: button
    water_warning_sensor:
      name: Water Warning Sensor
      selector:
        entity:
          domain: binary_sensor
    phone_notify_service:
      name: Default Mobile Notification Service
      default: notify."your_phone"
      selector:
        text:
    email_notify_service:
      name: Default Email Notification Service
      default: notify.email_notify
      selector:
        text:
    plant_push_notify:
      name: Optional Mobile Notification Service (per-plant)
      default: ""
      selector:
        text:
    plant_email_notify:
      name: Optional Email Notification Service (per-plant)
      default: ""
      selector:
        text:
    moisture_low:
      name: Moisture Threshold (Start Watering)
      selector:
        entity:
          domain: input_number
    moisture_high:
      name: Moisture Threshold (Stop Watering)
      selector:
        entity:
          domain: input_number
    pause_minutes:
      name: Pause Between Waterings (minutes)
      default: 2
      selector:
        number:
          min: 1
          max: 10
          unit_of_measurement: minutes
    max_cycles:
      name: Max Watering Cycles
      default: 20
      selector:
        number:
          min: 1
          max: 30
          unit_of_measurement: cycles
    dry_run_mode:
      name: Dry Run Mode (no button pressed)
      default: false
      selector:
        boolean:

trigger:
  - platform: numeric_state
    entity_id: !input moisture_sensor
    below: !input moisture_low

condition: []

variables:
  plant_name: !input plant_name
  moisture_sensor_entity: !input moisture_sensor
  moisture_low_entity: !input moisture_low
  moisture_high_entity: !input moisture_high
  water_warning_sensor_entity: !input water_warning_sensor
  pause: !input pause_minutes
  cycles: !input max_cycles
  low: "{{ states(moisture_low_entity) | float(0) }}"
  high: "{{ states(moisture_high_entity) | float(0) }}"
  dry_run: !input dry_run_mode

action:
  - variables:
      counter: 0

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ plant_email_notify | trim != '' }}"
        sequence:
          - service: notify.email_notify
            data:
              title: "🌱 Watering {{ plant_name }}"
              message: "Moisture of plant ≤{{ low }}. Watering until ≥{{ high }}."
      - conditions: []
        sequence:
          - service: notify.email_notify
            data:
              title: "🌱 Watering {{ plant_name }}"
              message: "Moisture of plant ≤{{ low }}. Watering until ≥{{ high }}."

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ plant_push_notify | trim != '' }}"
        sequence:
          - service: notify."your_phone"
            data:
              title: "🌱 Watering {{ plant_name }}"
              message: "Moisture of plant ≤{{ low }}. Watering until ≥{{ high }}."
      - conditions: []
        sequence:
          - service: notify."your_phone"
            data:
              title: "🌱 Watering {{ plant_name }}"
              message: "Moisture of plant ≤{{ low }}. Watering until ≥{{ high }}."

  - service: persistent_notification.create
    data:
      title: "Watering Started"
      message: "Watering {{ plant_name }}. Dry run: {{ dry_run }}"

  - repeat:
      while:
        - condition: template
          value_template: >
            {{ states(moisture_sensor_entity) | float(0) < high and
               counter < cycles and
               states(water_warning_sensor_entity) == 'off' }}
      sequence:
        - choose:
            - conditions:
                - condition: template
                  value_template: "{{ not dry_run }}"
              sequence:
                - service: button.press
                  target:
                    entity_id: !input water_button

        - service: notify.mobile_app_danphone
          data:
            title: "💧 {{ plant_name }} watered (Cycle {{ counter + 1 }})"
            message: "Moisture still below {{ high }}. Watering again..."

        - service: persistent_notification.create
          data:
            title: "Watering Cycle {{ counter + 1 }}"
            message: "Watered {{ plant_name }}. Dry run: {{ dry_run }}"

        - delay:
            minutes: "{{ pause }}"

        - variables:
            counter: "{{ counter + 1 }}"

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ states(water_warning_sensor_entity) == 'on' }}"
        sequence:
          - service: notify."your_phone"
            data:
              title: "⚠️ {{ plant_name }} Low Water"
              message: "GrowCube reports water tank empty."

          - service: persistent_notification.create
            data:
              title: "⚠️ Water Warning"
              message: "GrowCube reports empty tank for {{ plant_name }}."

  - service: script.log_growcube_watering
    data:
      plant_name: "{{ plant_name }}"
      cycles: "{{ counter }}"

mode: single
