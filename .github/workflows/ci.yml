name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Super-Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_YAML: true
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_PYTHON: true
          FILTER_REGEX_EXCLUDE: ".github/workflows/*"

  format:
    name: Python Format + Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install formatters and linters
        run: pip install black isort flake8

      - name: Run black
        run: black custom_components/

      - name: Run isort
        run: isort custom_components/

      - name: Run flake8
        run: |
          flake8 custom_components/
        continue-on-error: false  # Optional: change to true if you don't want the job to fail

      - name: Auto-commit formatting changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add custom_components/
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "style: auto-format Python files (black/isort/flake8)"
            git push
          fi

  hass-check:
    name: Home Assistant Config Check
    runs-on: ubuntu-latest
    needs: [lint, format]
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Home Assistant
        run: pip install homeassistant==2025.4.0

      - name: Run config check
        run: hass --script check_config --config .
